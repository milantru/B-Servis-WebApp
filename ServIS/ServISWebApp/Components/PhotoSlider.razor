@if (Images != null)
{
	<div id="photo-slider" class="carousel slide w-75">
		<div class="carousel-indicators">
			@for (int i = 0; i < ImagesCount; i++)
			{
				int iCopy = i;

				<button class="@GetCssActiveClass(iCopy)" onclick="@(() => SlideTo(iCopy))" aria-hidden="true"></button>
			}
		</div>
		<div class="carousel-inner">
			@for (int i = 0; i < ImagesCount; i++)
			{
				<div class="carousel-item @GetCssActiveClass(i)">
					<img src=@FileTools.GetDataUrlBase64String(Images[i], "images/jpeg") class="d-block img-fluid w-100" alt="Fotka @(i + 1)">
				</div>
			}
		</div>
		<button class="carousel-control-prev" href="#photo-slider" role="button" onclick="@(() => SlidePrev())">
			<span class="carousel-control-prev-icon" aria-hidden="true"></span>
			<span class="visually-hidden">Previous</span>
		</button>
		<button class="carousel-control-next" href="#photo-slider" role="button" onclick="@(() => SlideNext())">
			<span class="carousel-control-next-icon" aria-hidden="true"></span>
			<span class="visually-hidden">Next</span>
		</button>
	</div>
}

@code {
	private int index = 0;
	private List<byte[]> images = null!;

	[EditorRequired, Parameter]
	public List<byte[]> Images
	{
		get => images;
		set
		{
			if (value == null || value.Count == 0)
			{
				// possible TODO: maybe show some "missing photo" photo from static data instead of throwing exception
				throw new Exception("No image provided for photo slider.");
			}

			images = value;
			ImagesCount = images.Count;
		}
	}

	public int ImagesCount { get; private set; }

	public void SlidePrev()
	{
		int tmp = index - 1;
		if (tmp < 0)
		{
			index = ImagesCount + tmp;
		}
		else
		{
			index = tmp % ImagesCount;
		}

		StateHasChanged();
	}

	public void SlideNext()
	{
		index = (index + 1) % ImagesCount;

		StateHasChanged();
	}

	public void SlideTo(int newIndex)
	{
		if (newIndex < 0 || newIndex >= ImagesCount)
		{
			throw new ArgumentOutOfRangeException("No image with this index.");
		}

		index = newIndex;
		StateHasChanged();
	}

	private string GetCssActiveClass(int i) => i == index ? "active" : "inactive";
}
