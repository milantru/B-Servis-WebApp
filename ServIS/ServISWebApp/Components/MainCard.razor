@using ServISData.Models
@using ServISWebApp.Shared
@inject NavigationManager navMan

@if (MainOffer != null)
{
	<div class="card-main-box pos-rel">
		<div class="card-main-title card-main-title-eurocomach">
			@MainOffer.ExcavatorType.Brand
		</div>

		<div class="card-main-subtitle">
			(@MainOffer.ExcavatorType.Category)
		</div>

		<img class="card-main-img card-main-img-eurocomach-pas" 
			 src="@FileTools.GetDataUrlBase64String(MainOffer.Photo, "image/jpeg")" />

		<div class="card-main-text">
			@MainOffer.Description
		</div>

		<div class="card-main-button card-main-button-eurocomach">
			<a href="/typ-stroja/@MainOffer.ExcavatorType.Id">Zobraziť</a>
		</div>

		@if (OnDelete.HasDelegate)
		{
			<AuthorizeView Roles="Administrator">
				<button class="btn btn-danger delete-btn" type="button" @onclick="async () => await OnDelete.InvokeAsync()">X</button>
			</AuthorizeView>

			<AuthorizeView Roles="Administrator">
				<button class="btn btn-secondary edit-btn" type="button" @onclick="@(() => 
					navMan.NavigateTo($"/admin/uprava-ponuky/{MainOffer.Id}"))">E</button>
			</AuthorizeView>
		}
	</div>
}

@code {
	[Parameter, EditorRequired]
	public MainOffer MainOffer { get; set; } = null!;

	[Parameter]
	public EventCallback OnDelete { get; set; }
}
