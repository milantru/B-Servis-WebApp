<div class="card mb-3 pos-rel card-container">
	<a href="/pridavne-zariadenie/@AdditionalEquipment.Id">
		<div class="row g-0">
			<div class="col-md-4">
				<img src="@imgSrc" class="img-fluid rounded-start" alt="Fotka prídavného zariadenia @AdditionalEquipment.Name">
			</div>
			<div class="col-md-8">
				<div class="card-body">
					<h5 class="card-title">@AdditionalEquipment.Name</h5>
				</div>
			</div>
		</div>
	</a>
	@if (OnDelete.HasDelegate)
	{
		<AuthorizeView Roles="Administrator">
			<button class="btn btn-danger delete-btn" 
					type="button"
					@onclick="async () => await OnDelete.InvokeAsync()">X</button>
		</AuthorizeView>
	}
</div>

@code {
	private string imgSrc = null!;

	[EditorRequired, Parameter]
	public AdditionalEquipment AdditionalEquipment { get; set; } = null!;

	[Parameter]
	public EventCallback OnDelete { get; set; }

	protected override void OnParametersSet()
	{
		base.OnParametersSet();

		var additionalEquipmentTitlePhoto = AdditionalEquipment.Photos.First(p => p.IsTitle);

		imgSrc = FileTools.GetDataUrlBase64String(additionalEquipmentTitlePhoto.Photo, "images/jpeg");
	}
}
