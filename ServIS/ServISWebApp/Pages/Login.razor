@page "/prihlasovanie"

@inject IServISApi api
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navMan
@using ServISWebApp.Auth

<div id="login" class="servis-border">
	<h3>Prihlásenie</h3>

	<div id="login-data">
		<EditForm Model="loginData" OnValidSubmit="AuthenticateAsync">
			<div class="form-group">
				<label for="username">Prihlasovacie meno</label><br />
				<InputText @bind-Value="@loginData.Username" id="username" class="form-control" />
			</div>

			<div class="form-group">
				<label for="password">Heslo</label><br />
				<div id="input-password">
					<InputText @bind-Value="@loginData.Password"
							   type="@(isPasswordVisible ? "text" : "password")"
							   id="password"
							   class="form-control" />
					@*
					In icon element we have attribute style where we set "right" to
					{the value of "right" in .razor.css file in rule for #visibility-toggle - 1},
					because for some reason when clicked, the icon moved a bit...
					*@
					<i id="visibility-toggle"
					   class="fas @(isPasswordVisible ? "fa-eye" : "fa-eye-slash")"
					   style="@(isPasswordVisible ? "" : "right: 11px;")"
					   @onclick="() => isPasswordVisible = !isPasswordVisible"></i>
				</div>
			</div>

			<div class="container-center-items-horizontal">
				<SubmitButton Text="Prihlásiť" />
			</div>
		</EditForm>
	</div>
</div>


@code {
	private bool isPasswordVisible;
	private LoginData loginData = new();

	private async Task AuthenticateAsync()
	{
		User user;
		try
		{
			user = await api.GetUserAsync(loginData.Username);
		}
		catch
		{
			await js.InvokeVoidAsync("alert", "Užívateľ s takýmto menom neexistuje.");
			return;
		}

		if (!PasswordHasher.AreCredentialsCorrect(user.Password, loginData.Password))
		{
			await js.InvokeVoidAsync("alert", "Nesprávne heslo.");
			return;
		}

		var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
		await customAuthStateProvider.UpdateAuthenticationState(new UserSessionStorage(user));

		navMan.NavigateTo("/", true);
	}

	private class LoginData
	{
		public string Username { get; set; } = "";
		public string Password { get; set; } = "";
	}
}
