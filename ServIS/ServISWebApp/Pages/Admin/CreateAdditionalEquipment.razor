@page "/admin/nove-pridavne-zariadenie"
@page "/admin/uprava-pridavneho-zariadenia/{AdditionalEquipmentId:int}"

@attribute [Authorize(Roles = "Administrator")]
@inject ILogger<CreateAdditionalEquipment> logger
@inject IServISApi api
@inject NavigationManager navMan

<h3>Prídavné zariadenia- @(AdditionalEquipmentId.HasValue ? "úprava existujúceho" : "vytvorenie nového") záznamu</h3>

@if (AdditionalEquipment == null)
{
		<p>Načítava sa...</p>
}
else
{
		<AdditionalEquipmentForm Item="@AdditionalEquipment" OnSave="@(() => navMan.NavigateTo("/pridavne-zariadenia"))" />
}

@code {
	[Parameter]
	public int? AdditionalEquipmentId { get; set; } = null!;

	private AdditionalEquipment AdditionalEquipment { get; set; } = null!;

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		if (AdditionalEquipmentId.HasValue)
		{// edit of existing additional equipment
			try
			{
				AdditionalEquipment = await api.GetAdditionalEquipmentAsync(AdditionalEquipmentId.Value);
			}
			catch (Exception ex)
			{
				logger.LogError(ex, $"Additional equipment with id {AdditionalEquipmentId.Value} not found.");
			}
		}
		else
		{// new additional equipment
			AdditionalEquipment = new();
		}
	}
}
