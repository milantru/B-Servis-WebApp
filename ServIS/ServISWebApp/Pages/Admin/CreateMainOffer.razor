@page "/admin/nova-ponuka"
@page "/admin/uprava-ponuky/{MainOfferId:int}"

@attribute [Authorize(Roles = "Administrator")]
@inject ILogger<CreateMainOffer> logger
@inject IServISApi api
@inject NavigationManager navMan

<h3>Hlavné ponuky- @(MainOfferId.HasValue ? "úprava existujúceho" : "vytvorenie nového") záznamu</h3>

@if (MainOffer == null)
{
	<p>Načítava sa...</p>
}
else
{
	<MainOfferForm Item="@MainOffer" OnSave="@(() => navMan.NavigateTo("/"))" />
}

@code {
	[Parameter]
	public int? MainOfferId { get; set; } = null!;

	public MainOffer MainOffer { get; private set; } = null!;

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		if (MainOfferId.HasValue)
		{// edit of existing main offer
			try
			{
				MainOffer = await api.GetMainOfferAsync(MainOfferId.Value);
			}
			catch (Exception ex)
			{
				logger.LogError(ex, $"Main offer with id {MainOfferId.Value} not found.");
				MainOffer = new();
			}
		}
		else
		{// new main offer
			MainOffer = new();
		}
	}
}
