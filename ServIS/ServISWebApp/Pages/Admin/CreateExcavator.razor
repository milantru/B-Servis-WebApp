@page "/admin/novy-stroj/{ExcavatorTypeId:int}"
@page "/admin/uprava-stroja/{ExcavatorId:int}"

@attribute [Authorize(Roles = "Administrator")]
@inject IServISApi api

@if (Excavator == null)
{
	<p>Načítava sa...</p>
}
else
{
	<ExcavatorForm Excavator="Excavator" />
}

@code {
	[Parameter]
	public int? ExcavatorTypeId { get; set; } = null!;

	[Parameter]
	public int? ExcavatorId { get; set; } = null!;

	public Excavator Excavator { get; private set; } = null!;

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		if (ExcavatorTypeId.HasValue)
		{
			var excavatorTypeTmp = await api.GetExcavatorTypeAsync(ExcavatorTypeId.Value);
			if (excavatorTypeTmp == null)
			{
				throw new Exception($"Excavator type with id {excavatorTypeTmp} was not found.");
			}
			Excavator = new() { Type = excavatorTypeTmp };
		}
		else if (ExcavatorId.HasValue)
		{
			var excavatorTmp = await api.GetExcavatorAsync(ExcavatorId.Value);
			if (excavatorTmp == null)
			{
				throw new Exception($"Excavator with id {excavatorTmp} was not found.");
			}
			Excavator = excavatorTmp;
		}
	}
}
