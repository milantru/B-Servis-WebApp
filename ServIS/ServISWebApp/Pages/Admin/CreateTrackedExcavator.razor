@page "/admin/novy-stroj/pasove-bagre/{ExcavatorBrand}"
@page "/admin/uprava-stroja/pasove-bagre/{ExcavatorId:int}"

@inject IServISApi api

@if (ExcavatorBrand != null && ExcavatorId == null)
{
	<h3>Pásové bagre- vytvorenie nového záznamu</h3>
}
else
{
	<h3>Pásové bagre- úprava záznamu</h3>
}

<ExcavatorForm ExcavatorCategory="TrackedExcavator"
			   Excavator="@TrackedExcavator"
			   LinkToGoAfterValidSubmit="@LinkToGoAfterValidSubmit">
	<ExcavatorSpecificInfoFields>
		<tr>
			<td>Pracovná hmotnosť (kg)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.OperatingWeightKg" />
				<ValidationMessage For="@(() => TrackedExcavator.OperatingWeightKg)" />
			</td>
		</tr>

		<tr>
			<td>Hĺbka výkopu (mm)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.ExcavationDepthMm" />
				<ValidationMessage For="@(() => TrackedExcavator.ExcavationDepthMm)" />
			</td>
		</tr>

		<tr>
			<td>Maximálna šírka (mm)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.MaximumWidthMm" />
				<ValidationMessage For="@(() => TrackedExcavator.MaximumWidthMm)" />
			</td>
		</tr>

		<tr>
			<td>Motor</td>
			<td>
				<InputText @bind-Value="@TrackedExcavator.Engine" />
				<ValidationMessage For="@(() => TrackedExcavator.Engine)" />
			</td>
		</tr>

		<tr>
			<td>Maximálny výkon (kw)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.MaximumPowerKw" />
				<ValidationMessage For="@(() => TrackedExcavator.MaximumPowerKw)" />
			</td>
		</tr>

		<tr>
			<td>Trhacia sila (kg)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.TearingStrengthKg" />
				<ValidationMessage For="@(() => TrackedExcavator.TearingStrengthKg)" />
			</td>
		</tr>

		<tr>
			<td>Sila vniknutia (kg)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.PenetrationForceKg" />
				<ValidationMessage For="@(() => TrackedExcavator.PenetrationForceKg)" />
			</td>
		</tr>

		<tr>
			<td>Prietok hydrauliky (l/min)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.HydraulicFlowLpm" />
				<ValidationMessage For="@(() => TrackedExcavator.HydraulicFlowLpm)" />
			</td>
		</tr>

		<tr>
			<td>Pracovný tlak (bar)</td>
			<td>
				<InputNumber @bind-Value="@TrackedExcavator.OperatingPressureBar" />
				<ValidationMessage For="@(() => TrackedExcavator.OperatingPressureBar)" />
			</td>
		</tr>
	</ExcavatorSpecificInfoFields>
</ExcavatorForm>

@code {
	[Parameter]
	public string? ExcavatorBrand { get; set; } = null;

	[Parameter]
	public int? ExcavatorId { get; set; } = null;

	private TrackedExcavator TrackedExcavator { get; set; } = null!;

	private string LinkToGoAfterValidSubmit { get; set; } = null!;

	protected override void OnParametersSet()
	{
		base.OnParametersSet();

		if (ExcavatorId == null && ExcavatorBrand != null)
		{
			TrackedExcavator = new TrackedExcavator
				{
					Brand = ExcavatorBrand,
					Category = "pásové bagre"
				};

			LinkToGoAfterValidSubmit = $"/pasove-bagre-{ExcavatorBrand.ToLower()}";
		}
	}

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		if (ExcavatorId != null && ExcavatorBrand == null)
		{
			var trackedExcavatorTmp = await api.GetTrackedExcavatorAsync((int)ExcavatorId);
			if (trackedExcavatorTmp == null)
			{
				throw new Exception("Tracked excavator missing.");
			}
			TrackedExcavator = trackedExcavatorTmp;

			LinkToGoAfterValidSubmit = $"/stroj/{ExcavatorId}";
		}
	}
}
