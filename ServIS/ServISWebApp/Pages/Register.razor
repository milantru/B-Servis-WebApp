@page "/registracia"

@inject IServISApi api
@inject NavigationManager navMan
@using ServISWebApp.Auth
@using ServISWebApp.CssProviders

<div id="registration" class="w-75 servis-border">
	<h3>Registrácia</h3>

	<EditForm Model="User" OnValidSubmit="RegisterUserAsync">
		<DataAnnotationsValidator />
		<CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider" />

		<div class="row">
			<div class="d-flex">
				<div class="form-group">
					<label for="username">Prihlasovacie meno:</label>
					<InputText @bind-Value="User.Username" id="username" />
					<ValidationMessage For="@(() => User.Username)" />
				</div>
			</div>
		</div>

		<div class="row">
			<div class="d-flex">
				<div class="form-group" col>
					<label for="password">Heslo:</label>
					<InputPassword @bind-Value="User.Password" id="password" />
					<ValidationMessage For="@(() => User.Password)" />
				</div>
			</div>
		</div>

		<div class="row">
			<div class="d-flex flex-no-wrap">
				<div class="form-group">
					<label for="name">Meno:</label>
					<InputText @bind-Value="User.Name" id="name" />
					<ValidationMessage For="@(() => User.Name)" />
				</div>

				<div class="form-group">
					<label for="surname">Priezvisko:</label>
					<InputText @bind-Value="User.Surname" id="surname" />
					<ValidationMessage For="@(() => User.Surname)" />
				</div>
			</div>
		</div>

		<div class="row">
			<div class="d-flex flex-no-wrap">
				<div class="form-group">
					<label for="email">Email:</label>
					<InputText @bind-Value="User.Email" id="email" />
					<ValidationMessage For="@(() => User.Email)" />
				</div>

				<div class="form-group">
					<label for="phone">Telefónne číslo:</label>
					<InputText @bind-Value="User.PhoneNumber" id="phone" />
					<ValidationMessage For="@(() => User.PhoneNumber)" />
				</div>
			</div>
		</div>

		<div class="row">
			<div class="d-flex">
				<div class="form-group">
					<label for="residence">Mesto:</label>
					<InputText @bind-Value="User.Residence" id="residence" />
					<ValidationMessage For="@(() => User.Residence)" />
				</div>
			</div>
		</div>

		<div id="btn-panel" class="container-center-items-horizontal">
			<SubmitButton Text="Registrovať" />
		</div>
	</EditForm>
</div>

@code {
	private User User { get; set; } = new();

	private async Task RegisterUserAsync()
	{
		/* we dont really need to create newUser, we can just save User
			* but we would see on a brief moment password hash in the form,
			* this way we wont see it */
		var newUser = new User
			{
				Id = User.Id,
				Username = User.Username,
				Password = PasswordHasher.Hash(User.Password),
				Role = User.Role,
				Name = User.Name,
				Surname = User.Surname,
				PhoneNumber = User.PhoneNumber,
				Email = User.Email,
				Residence = User.Residence,
				//IsTemporary = User.IsTemporary
			};

		try
		{
			await api.SaveUserAsync(newUser);
		}
		catch
		{
			throw new Exception($"Failed to save user (registration failed).");
		}

		navMan.NavigateTo("/");
	}
}
