@page "/profil"

@attribute [Authorize(Roles = "Administrator,User")]
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@using ServISWebApp.Auth

@if (!authFailed)
{
	<div>
		<h3>Profil</h3>

		@if (User == null)
		{
			<p>Načítáva sa...</p>
		}
		else
		{
			<UserForm User="@User"
					  OnSave="@(async () => await js.InvokeVoidAsync("alert", "Údaje úspešne zmenené."))" />
		}
	</div>
}
else
{
	<p>Nastal problém s prihlásením.</p>
}

@code {
	private bool authFailed;

	[CascadingParameter]
	public Task<AuthenticationState> AuthenticationStateAsync { get; set; } = null!;

	private User? User { get; set; }

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		var authState = await AuthenticationStateAsync;

		var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;

		User = await customAuthStateProvider.GetLoggedInUserAsync(authState)!;
		if (User is null)
		{
			authFailed = true;
		}
	}
}
