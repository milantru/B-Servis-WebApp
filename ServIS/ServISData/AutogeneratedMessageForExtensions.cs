using ServISData.Attributes;
using ServISData.Models;

namespace ServISData
{
	public static class AutogeneratedMessageForExtensions
	{
		public static string GetLabel(this AutogeneratedMessage.For forWhom)
		{
			var customAttribute = GetCustomAttribute(forWhom);

			return customAttribute.Label;
		}

		public static string GetDefaultSubject(this AutogeneratedMessage.For forWhom)
		{
			var customAttribute = GetCustomAttribute(forWhom);

			return customAttribute.DefaultSubject;
		}

		public static string GetDefaultMessage(this AutogeneratedMessage.For forWhom)
		{
			var customAttribute = GetCustomAttribute(forWhom);

			return customAttribute.DefaultMessage;
		}

		public static string[] GetTags(this AutogeneratedMessage.For forWhom)
		{
			var customAttribute = GetCustomAttribute(forWhom);

			return customAttribute.Tags;
		}

		private static AutogeneratedMessageDataAttribute GetCustomAttribute(AutogeneratedMessage.For forWhom)
		{
			var inputTypeEnumName = Enum.GetName(forWhom);
			if (inputTypeEnumName is null)
			{
				throw new Exception($"Enum '{nameof(AutogeneratedMessage.For)}' does NOT contain constant '{forWhom}'");
			}

			var customAttribute = forWhom.GetType()
				.GetField(inputTypeEnumName)
				?.GetCustomAttributes(false)
				.OfType<AutogeneratedMessageDataAttribute>()
				.Single();
			if (customAttribute is null)
			{
				throw new Exception($"Enum '{nameof(AutogeneratedMessage.For)}' does NOT have (single) attribute '{nameof(AutogeneratedMessageDataAttribute)}'");
			}

			return customAttribute;
		}
	}
}
